# Lecture 4.1

## Women in the Workforce

**Questions**

-   What are the top 10 occupations with the highest median earnings (across males and females)?

-   How do median earnings differ between males and females in those same occupations?

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................load packages.........................
library(tidyverse)

#..........................import data...........................
jobs <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-03-05/jobs_gender.csv")

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                wrangle data                              ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

jobs_clean <- jobs |> 
  
  # add cols (needed for dumbbell plot) ----
  mutate(percent_male = 100 - percent_female, # % of females within each industry was already included
         difference_earnings = total_earnings_male - total_earnings_female) |>  # diff in earnings between M & F
  
  # rearrange columns ----
  relocate(year, major_category, minor_category, occupation,
          total_workers, workers_male, workers_female,
          percent_male, percent_female,
          total_earnings, total_earnings_male, total_earnings_female, difference_earnings,
          wage_percent_of_male) |> 
  
  # drop rows with missing earning data ----
  drop_na(total_earnings_male, total_earnings_female) |> 
  
  # make occupation a factor ----
  mutate(occupation = as.factor(occupation)) |> 
  
  # ---- this next step is for creating our dumbbell plots ----

  # classify jobs by percentage male or female ----
  mutate(group_label = case_when(
    percent_female >= 75 ~ "Occupations that are 75%+ female",
    percent_female >= 45 & percent_female <= 55 ~ "Occupations that are 45-55% female",
    percent_male >= 75 ~ "Occupations that are 75%+ male"
  ))


## Look at data 
glimpse(jobs)
```

## Bar Plots
```{r}
test <- jobs_clean %>% 
  filter(year == 2016) %>% 
  slice_max(order_by = total_earnings, n = 10) %>% 
  ggplot(aes(x = occupation, y = total_earnings)) +
  # want to change the height of my bars to something specific in
  # geom_col : geom column, if we want to manually 
  geom_col()

test
```

# Lecture 4.1

## Women in the Workforce

**Questions**

-   What are the top 10 occupations with the highest median earnings (across males and females)?

-   How do median earnings differ between males and females in those same occupations?

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    setup                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#..........................load packages.........................
library(tidyverse)

#..........................import data...........................
jobs <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-03-05/jobs_gender.csv")

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                wrangle data                              ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

jobs_clean <- jobs |> 
  
  # add cols (needed for dumbbell plot) ----
  mutate(percent_male = 100 - percent_female, # % of females within each industry was already included
         difference_earnings = total_earnings_male - total_earnings_female) |>  # diff in earnings between M & F
  
  # rearrange columns ----
  relocate(year, major_category, minor_category, occupation,
          total_workers, workers_male, workers_female,
          percent_male, percent_female,
          total_earnings, total_earnings_male, total_earnings_female, difference_earnings,
          wage_percent_of_male) |> 
  
  # drop rows with missing earning data ----
  drop_na(total_earnings_male, total_earnings_female) |> 
  
  # make occupation a factor ----
  mutate(occupation = as.factor(occupation)) |> 
  
  # ---- this next step is for creating our dumbbell plots ----

  # classify jobs by percentage male or female ----
  mutate(group_label = case_when(
    percent_female >= 75 ~ "Occupations that are 75%+ female",
    percent_female >= 45 & percent_female <= 55 ~ "Occupations that are 45-55% female",
    percent_male >= 75 ~ "Occupations that are 75%+ male"
  ))


## Look at data 
glimpse(jobs)
```

## Bar Plots
```{r}
test <- jobs_clean %>% 
  filter(year == 2016) %>% 
  slice_max(order_by = total_earnings, n = 10) %>% 
  ggplot(aes(x = occupation, y = total_earnings)) +
  # want to change the height of my bars to something specific in
  # geom_col : geom column, if we want to manually 
  geom_col()

test
```

```{r}
# fixe axis 
test <- jobs_clean %>% 
  filter(year == 2016) %>% 
  slice_max(order_by = total_earnings, n = 10) %>% 
  # reorder in decsenidng  many different ways, we can do it in the aes
  # reodered here 
  ggplot(aes(x = fct_reorder(occupation, total_earnings), y = total_earnings)) +
  # want to change the height of my bars to something specific in
  # geom_col : geom column, if we want to manually 
  geom_col() +
  # geom_text(aes(label = total_earnings), hjust = 1.2, color = "white") +
  geom_text(aes(label = scales::dollar(total_earnings)), hjust = 1.2, color = "white") + 
  scale_y_continuous(labels = scales::label_currency(accuracy = 1, scale = 0.001,
                                                     suffix = "k")) +
  coord_flip()
  
test
```


# Lollipop Plot
```{r}

# occupation is a factor ! 
# use the package ___ on a factor 
test <- jobs_clean %>% 
  filter(year == 2016) %>% 
  slice_max(order_by = total_earnings, n = 10) %>% 
  # reorder in decsenidng  many different ways, we can do it in the aes
  # reodered here 
  ggplot(aes(x = fct_reorder(occupation, total_earnings), y = total_earnings)) +
  # want to change the height of my bars to something specific in
  # geom_col : geom column, if we want to manually 
  ggalt::geom_lollipop() +
  geom_text(aes(label = scales::dollar(total_earnings)), hjust = -0.2) + 
  scale_y_continuous(labels = scales::label_currency(accuracy = 1, scale = 0.001,
                                                     suffix = "k"),
                     limits = c(0, 250000)) +
  coord_flip() 
  
test



```


```{r}
# 2 groups ----
jobs_clean |> 
  filter(year == 2016) |> 
  slice_max(order_by = total_earnings, n = 10) |> 
  pivot_longer(cols = c(total_earnings_female, total_earnings_male), names_to = "group", values_to = "earnings_by_group") |> 
  mutate(sex = str_remove(group, pattern = "total_earnings_")) |> 
  ggplot(aes(x = fct_reorder(occupation, earnings_by_group), y = earnings_by_group, fill = sex)) + 
  geom_col(position = position_dodge()) + # default `position = "stack"`, dodge with 
  coord_flip()
```
### 
```{r}
# 2 groups in lollipops
jobs_clean |> 
  filter(year == 2016) |> 
  slice_max(order_by = total_earnings, n = 10) |> 
  pivot_longer(cols = c(total_earnings_female, total_earnings_male), names_to = "group", values_to = "earnings_by_group") |> 
  mutate(sex = str_remove(group, pattern = "total_earnings_")) |> 
  ggplot(aes(x = fct_reorder(occupation, earnings_by_group), y = earnings_by_group, color = sex)) +
  # first step
  geom_point(position = position_dodge(width = 0.5)) + 
  geom_linerange(aes(xmin = occupation, xmax = occupation,
                 ymin = 0, ymax = earnings_by_group), position = position_dodge(width = 0.5)) +
  coord_flip()
```


```{r}
### 
#....guarantee the same random samples each time we run code.....
set.seed(0)

#.........get 10 random jobs that are 75%+ female (2016).........
f75 <- jobs_clean |> 
  filter(year == 2016, group_label == "Occupations that are 75%+ female") |> 
  slice_sample(n = 10)

#..........get 10 random jobs that are 75%+ male (2016)..........
m75 <- jobs_clean |> 
  filter(year == 2016, group_label == "Occupations that are 75%+ male") |> 
  slice_sample(n = 10)

#........get 10 random jobs that are 45-55%+ female (2016).......
f50 <- jobs_clean |> 
  filter(year == 2016, group_label == "Occupations that are 45-55% female") |> 
  slice_sample(n = 10)

#.......combine dfs & relevel factors (for plotting order).......
subset_jobs <- rbind(f75, m75, f50) |> 
  mutate(group_label = fct_relevel(group_label, "Occupations that are 75%+ female", 
                                   "Occupations that are 45-55% female", "Occupations that are 75%+ male"))

```

```{r}
# dumbell plot -----
ggplot(subset_jobs) +
  geom_segment(aes(x = total_earnings_female, 
                   xend = total_earnings_male,
                   y = fct_reorder(occupation,total_earnings), yend = occupation)) +
  geom_point(aes(x = total_earnings_male, y = occupation),
             color = "#94c91e", size = 2.1) +
  geom_point(aes(x = total_earnings_female, y = occupation),
             color = "lightpink", size = 2.1) +
  facet_wrap(~group_label, nrow = 3, scales = "free_y")
```


# Lecture 4.2

```{r}
# load packages ---
library(metajam)

# download
download_d1_data("https://cn.dataone.org/cn/v2/resolve/https%3A%2F%2Fpasta.lternet.edu%2Fpackage%2Fdata%2Feml%2Fknb-lter-hbr%2F208%2F9%2F3b3cf7ea447cb875d7c7d68ebdfd24c7",
                 path = "~/Documents/MEDSWINTER2024/EDS240/eds240_git/EDS-240-class-examples/week4/")

# read in downloaded files ----
stream_chem_al <- read_d1_files("~/Documents/MEDSWINTER2024/EDS240/eds240_git/EDS-240-class-examples/week4/data")

stream_chem_data <- stream_chem_al$data
```

```{r}
# basic scatter ---
stream_chem_data %>% 
  filter(waterYr == 2021) %>% 
  ggplot(aes(x = DOC, y = pH)) +
  geom_point(alpha = 0.5) + 
  # Geom_rug visualizes some type of histogra/density
  geom_rug()

# ggExtra ---
# you need to store the plot first !!
p1 <- stream_chem_data %>% 
  filter(waterYr == 2021) %>% 
  ggplot(aes(x = DOC, y = pH)) +
  geom_point(alpha = 0.5)
# type 
ggExtra::ggMarginal(p1, type = "density")

## ggExtra

p2 <- stream_chem_data |> 
  filter(waterYr == 2021) |> 
  ggplot(aes(x = DOC, y = pH, color = site)) + 
  geom_point(alpha = 0.5) +
  theme(legend.position = "bottom")

ggExtra::ggMarginal(p2, type = "density", groupFill = TRUE, groupColour = TRUE)
```

```{r}
stream_chem_data %>% 
  filter(waterYr  == 2021) %>% 
  filter(site == "W8") %>% 
  ggplot(aes(x = DOC, y = pH)) +
  geom_point(alpha = 0.5) +
  geom_smooth(method = "lm")
```

```{r}
ggplot(stream_chem_data, aes(x = SO4, y = pH, color = site)) +
  geom_point(alpha = 0.5, size = .1) +
  geom_rug() 
```

```{r}
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_bin2d() +
  scale_fill_viridis_c()
```

```{r}
ggplot(stream_chem_data, aes(x = SO4, y = pH)) +
  geom_hex() +
  scale_fill_viridis_c() +
  # fix the legen
  guides(fill = guide_colorbar(title = "Count",
                               barwidth = 2, barheight = 15))
```
